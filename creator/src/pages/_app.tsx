import { type AppType } from "next/app";
import { Inter } from "next/font/google";
import { ClerkProvider } from "@clerk/nextjs";

import { api } from "@/utils/api";

import "@/styles/globals.css";
import LoginBar from "@/components/LoginBar";
import Head from "next/head";
import { AdminCheckProvider } from "@/hooks/admin";
import { useEffect, useState } from "react";
import { useNovelStore } from "@/hooks/novelStore";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
});

export let trpcClient = null as unknown as ReturnType<
  typeof api.useUtils
>["client"];

const MyApp: AppType = ({ Component, pageProps }) => {
  const [navLoaded, setNavLoaded] = useState(false);
  trpcClient = api.useUtils().client;

  const novels = api.db.getFromDB.useQuery().data;
  const nvStore = useNovelStore();

  const { loadData, loadMutations } = nvStore;

  useEffect(() => {
    if (novels) {
      console.log("loading novels", novels);
      loadData(novels); 
      console.log("loading mutations");
      loadMutations(localStorage);
    }
  }, [novels, loadData, loadMutations]);

  return (
    <>
      <Head>
        <title>Editorial Version for TLSetsu</title>
        <meta
          name="description"
          content="Generated by create-t3-app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ClerkProvider {...pageProps}>
        <AdminCheckProvider>
          <LoginBar setLoaded={setNavLoaded} />
          {navLoaded ?
            <main className={`font-sans ${inter.variable}`}>
              <Component {...pageProps} />
            </main>
          : <></>}
        </AdminCheckProvider>
      </ClerkProvider>
    </>
  );
};

export default api.withTRPC(MyApp);
