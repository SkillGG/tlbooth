// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "postgresql"
    url          = env("DB_URL")
    directUrl    = env("DB_DIRECT_URL")
    relationMode = "prisma"
}

enum LANG {
    PL
    EN
    JP
}

enum TLStatus {
    STAGED
    TL
    PR
    PUBLISH
}

enum LineStatus {
    STAGED
    TL
    PR
}

enum CHANGE_TYPE {
    CREATE
    EDIT
    REMOVE
}

model Users {
    id String @id

    name String @unique

    role String[]
}

model Translation {
    id String @id @default(cuid())

    oglang LANG
    tllang LANG

    status TLStatus

    publishDate DateTime?

    Chapter   Chapter? @relation(fields: [chapterID], references: [id], onDelete: Cascade)
    chapterID String?  @map("chapterId")

    lines TextLine[]

    @@index([chapterID])
}

model TextLine {
    id String @id @default(cuid()) @map("_id")

    pos    Int
    tlline String
    ogline String

    status LineStatus @default(STAGED)

    Translation Translation? @relation(fields: [textID], references: [id], onDelete: Cascade)
    textID      String?      @map("textId")

    @@index([textID])
}

model Novel {
    id String @id @default(cuid()) @map("_id")

    url String @unique

    author String

    ogname String
    tlname String @default("")

    ogdesc String @default("")
    tldesc String @default("")

    chapters Chapter[]
}

model Chapter {
    id String @id @default(cuid()) @map("_id")

    url String @unique

    num   String @default("1")
    ognum Int    @default(1)

    ogPub DateTime

    ogname String
    tlname String?

    Novel   Novel  @relation(fields: [novelID], references: [id], onDelete: Cascade)
    novelID String @map("novelId")

    translations Translation[]

    @@index([novelID])
}

model Changes {
    id String @id @default(cuid()) @map("_id")

    date DateTime

    user String

    changedID  String
    changeType CHANGE_TYPE
    changeData Json
}
